{
	"info": {
		"_postman_id": "e2b80ebd-bbef-4630-891d-f5f5fb9c0991",
		"name": "API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Admin",
			"item": [
				{
					"name": "Create Admin",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"password\": \"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/admin/create-admin",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"admin",
								"create-admin"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Session",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"console.log(jsonData)",
									"postman.setEnvironmentVariable(\"accessToken\", jsonData.accessToken);",
									"postman.setEnvironmentVariable(\"refreshToken\", jsonData.refreshToken);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"password\": \"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/api/sessions",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"sessions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Session",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"const newAccessToken = responseHeaders['x-access-token']",
									"",
									"if(newAccessToken){",
									"    console.log('Set new access token')",
									"postman.setEnvironmentVariable(\"accessToken\", newAccessToken);",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "x-refresh",
								"value": "{{refreshToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{endpoint}}/api/sessions",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"sessions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Session",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const newAccessToken = responseHeaders['x-access-token']",
									"",
									"if(newAccessToken){",
									"    console.log('Set new access token')",
									"postman.setEnvironmentVariable(\"accessToken\", newAccessToken);",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "x-refresh",
								"value": "{{refreshToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{endpoint}}/api/sessions",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"sessions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change Password to alternative password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"const newAccessToken = responseHeaders['x-access-token']",
									"",
									"if(newAccessToken){",
									"    console.log('Set new access token')",
									"postman.setEnvironmentVariable(\"accessToken\", newAccessToken);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "x-refresh",
								"value": "{{refreshToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"password\": \"{{password}}\",\n    \"new_password\" : \"{{alt_password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/admin/update-password",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"admin",
								"update-password"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change Password back to original",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"const newAccessToken = responseHeaders['x-access-token']",
									"",
									"if(newAccessToken){",
									"    console.log('Set new access token')",
									"postman.setEnvironmentVariable(\"accessToken\", newAccessToken);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "x-refresh",
								"value": "{{refreshToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"password\": \"{{alt_password}}\",\n    \"new_password\" : \"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/admin/update-password",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"admin",
								"update-password"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Admin alternative session",
			"item": [
				{
					"name": "Create Session",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"console.log(jsonData)",
									"postman.setEnvironmentVariable(\"alt_accessToken\", jsonData.accessToken);",
									"postman.setEnvironmentVariable(\"alt_refreshToken\", jsonData.refreshToken);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"password\": \"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/api/sessions",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"sessions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Session",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"const newAccessToken = responseHeaders['x-access-token']",
									"",
									"if(newAccessToken){",
									"    console.log('Set new access token')",
									"postman.setEnvironmentVariable(\"alt_accessToken\", newAccessToken);",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{alt_accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "x-refresh",
								"value": "{{alt_refreshToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{endpoint}}/api/sessions",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"sessions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Session",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const newAccessToken = responseHeaders['x-access-token']",
									"",
									"if(newAccessToken){",
									"    console.log('Set new access token')",
									"postman.setEnvironmentVariable(\"alt_accessToken\", newAccessToken);",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{alt_accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "x-refresh",
								"value": "{{alt_refreshToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{endpoint}}/api/sessions",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"sessions"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Admin alternative password",
			"item": [
				{
					"name": "Create Session w/ alternative password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"console.log(jsonData)",
									"postman.setEnvironmentVariable(\"accessToken\", jsonData.accessToken);",
									"postman.setEnvironmentVariable(\"refreshToken\", jsonData.refreshToken);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"password\": \"{{alt_password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/api/sessions",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"sessions"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Announcements",
			"item": [
				{
					"name": "Get Announcements with Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"const newAccessToken = responseHeaders['x-access-token']",
									"",
									"if(newAccessToken){",
									"    console.log('Set new access token')",
									"postman.setEnvironmentVariable(\"accessToken\", newAccessToken);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "x-refresh",
								"value": "{{refreshToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{endpoint}}/announcements",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"announcements"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Announcements",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const newAccessToken = responseHeaders['x-access-token']",
									"",
									"if(newAccessToken){",
									"    console.log('Set new access token')",
									"postman.setEnvironmentVariable(\"accessToken\", newAccessToken);",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									" //in 14 day // 14d = 12096e5ms",
									"postman.setEnvironmentVariable(\"timeout\", JSON.stringify(new Date(Date.now() + 12096e5)));",
									"",
									"",
									"",
									"postman.setEnvironmentVariable(\"timeOfAddition\", JSON.stringify(Date.now()));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "x-refresh",
								"value": "{{refreshToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"announcementDataList\": [\n        {\n            \"title\": \"new colleague\",\n            \"text\": \"Ragesh is our new collegue! He is working remotely.\",\n            \"author\": \"Bob\",\n            \"timeout\": \"2022-01-23T10:35:45.451Z\",\n            \"timeOfAddition\": \"2022-01-23T10:35:45.451Z\"\n        },\n        {\n            \"title\": \"new publication\",\n            \"text\": \"Alice published an article on Elsevier\",\n            \"author\": \"Bob\",\n            \"timeout\": \"2022-01-23T10:35:45.451Z\",\n            \"timeOfAddition\": \"2022-01-23T10:35:45.451Z\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/announcements",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"announcements"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Config",
			"item": [
				{
					"name": "Update Config",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const newAccessToken = responseHeaders['x-access-token']",
									"",
									"if(newAccessToken){",
									"    console.log('Set new access token')",
									"postman.setEnvironmentVariable(\"accessToken\", newAccessToken);",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									" //in 14 day // 14d = 12096e5ms",
									"postman.setEnvironmentVariable(\"timeout\", JSON.stringify(new Date(Date.now() + 12096e5)));",
									"",
									"",
									"",
									"postman.setEnvironmentVariable(\"timeOfAddition\", JSON.stringify(Date.now()));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "x-refresh",
								"value": "{{refreshToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"fontSize\": \"medium\",\n    \"colorScheme\": \"dark\",\n    \"background\": \"https://images.wallpaperscraft.com/image/single/city_skyscrapers_clouds_rain_road_cars_lights_58563_3840x2160.jpg\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/config",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"config"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Config",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const newAccessToken = responseHeaders['x-access-token']",
									"",
									"if(newAccessToken){",
									"    console.log('Set new access token')",
									"postman.setEnvironmentVariable(\"accessToken\", newAccessToken);",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									" //in 14 day // 14d = 12096e5ms",
									"postman.setEnvironmentVariable(\"timeout\", JSON.stringify(new Date(Date.now() + 12096e5)));",
									"",
									"",
									"",
									"postman.setEnvironmentVariable(\"timeOfAddition\", JSON.stringify(Date.now()));"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "x-refresh",
								"value": "{{refreshToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"announcementDataList\": [\n        {\n            \"email\": \"test@web.de\",\n            \"name\": \"Ragesh\"\n        },\n        {\n            \"email\": \"bob@itec.edu\",\n            \"name\": \"Bob\"\n        },\n        {\n            \"email\": \"alice@itec.edu\",\n            \"name\": \"Alice\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/config",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"config"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Widgets",
			"item": [
				{
					"name": "Get WidgetDataList with Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"const newAccessToken = responseHeaders['x-access-token']",
									"",
									"if(newAccessToken){",
									"    console.log('Set new access token')",
									"postman.setEnvironmentVariable(\"accessToken\", newAccessToken);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "x-refresh",
								"value": "{{refreshToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{endpoint}}/widgets",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"widgets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get WidgetDataList without Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{endpoint}}/widgets",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"widgets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update WidgetDataList",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const newAccessToken = responseHeaders['x-access-token']",
									"",
									"if(newAccessToken){",
									"    console.log('Set new access token')",
									"postman.setEnvironmentVariable(\"accessToken\", newAccessToken);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "x-refresh",
								"value": "{{refreshToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"widgetDataList\": [\n        {\n            \"widgetId\": \"tram-schedule\",\n            \"location\": 1,\n            \"_id\": \"61ec6ec7271e856433e60d1b\"\n        },\n        {\n            \"widgetId\": \"rss-feed\",\n            \"location\": 2,\n            \"rawConfig\": {\n                \"url\": \"www.example.com\"\n            },\n            \"_id\": \"61ec6ec7271e856433e60d1c\"\n        },\n        {\n            \"widgetId\": \"weather\",\n            \"location\": 3,\n            \"_id\": \"61ec6ec7271e856433e60d1d\"\n        },\n        {\n            \"widgetId\": \"time\",\n            \"location\": 4,\n            \"_id\": \"61ec6ec7271e856433e60d1e\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/widgets",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"widgets"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Values",
			"item": [
				{
					"name": "Update Values",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const newAccessToken = responseHeaders['x-access-token']",
									"",
									"if(newAccessToken){",
									"    console.log('Set new access token')",
									"postman.setEnvironmentVariable(\"accessToken\", newAccessToken);",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									" //in 14 day // 14d = 12096e5ms",
									"postman.setEnvironmentVariable(\"timeout\", JSON.stringify(new Date(Date.now() + 12096e5)));",
									"",
									"",
									"",
									"postman.setEnvironmentVariable(\"timeOfAddition\", JSON.stringify(Date.now()));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "x-refresh",
								"value": "{{refreshToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"fontSizes\": [\n        {\n            \"id\": \"1\",\n            \"name\": \"large\",\n            \"titleFontSize\": 16,\n            \"bodyFontSize\": 16,\n            \"specialFontSize\": 16,\n            \"specialFontSizeAccent\": 16\n        },\n        {\n            \"id\": \"1\",\n            \"name\": \"small\",\n            \"titleFontSize\": 11,\n            \"bodyFontSize\": 11,\n            \"specialFontSize\": 11,\n            \"specialFontSizeAccent\": 11\n        }\n    ],\n    \"colorSchemes\": [\n        {\n            \"id\": \"1\",\n            \"name\": \"dark\",\n            \"titleColor\": \"black\",\n            \"bodyColor\": \"black\",\n            \"specialBoldColor\": \"black\",\n            \"specialSubtleColor\": \"black\",\n            \"accentBarColor\": \"black\",\n            \"backgrounds\": [\n                {\n                    \"id\": \"1\",\n                    \"url\": \"https://www.test.de\"\n                },\n                {\n                    \"id\": \"2\",\n                    \"url\": \"https://www.test.com\"\n                }\n            ]\n        },\n        {\n            \"id\": \"2\",\n            \"name\": \"light\",\n            \"titleColor\": \"white\",\n            \"bodyColor\": \"black\",\n            \"specialBoldColor\": \"white\",\n            \"specialSubtleColor\": \"white\",\n            \"accentBarColor\": \"white\",\n            \"backgrounds\": [\n                {\n                    \"id\": \"1\",\n                    \"url\": \"https://www.test.de/light\"\n                },\n                {\n                    \"id\": \"2\",\n                    \"url\": \"https://www.test.com/light\"\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/values",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"values"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Values",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const newAccessToken = responseHeaders['x-access-token']",
									"",
									"if(newAccessToken){",
									"    console.log('Set new access token')",
									"postman.setEnvironmentVariable(\"accessToken\", newAccessToken);",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									" //in 14 day // 14d = 12096e5ms",
									"postman.setEnvironmentVariable(\"timeout\", JSON.stringify(new Date(Date.now() + 12096e5)));",
									"",
									"",
									"",
									"postman.setEnvironmentVariable(\"timeOfAddition\", JSON.stringify(Date.now()));"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "x-refresh",
								"value": "{{refreshToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"announcementDataList\": [\n        {\n            \"email\": \"test@web.de\",\n            \"name\": \"Ragesh\"\n        },\n        {\n            \"email\": \"bob@itec.edu\",\n            \"name\": \"Bob\"\n        },\n        {\n            \"email\": \"alice@itec.edu\",\n            \"name\": \"Alice\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/values",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"values"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Update Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const newAccessToken = responseHeaders['x-access-token']",
									"",
									"if(newAccessToken){",
									"    console.log('Set new access token')",
									"postman.setEnvironmentVariable(\"accessToken\", newAccessToken);",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									" //in 14 day // 14d = 12096e5ms",
									"postman.setEnvironmentVariable(\"timeout\", JSON.stringify(new Date(Date.now() + 12096e5)));",
									"",
									"",
									"",
									"postman.setEnvironmentVariable(\"timeOfAddition\", JSON.stringify(Date.now()));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "x-refresh",
								"value": "{{refreshToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"usersDataList\": [\n        {\n            \"email\": \"test@web.de\",\n            \"name\": \"Ragesh\"\n        },\n        {\n            \"email\": \"bob@itec.edu\",\n            \"name\": \"Bob\"\n        },\n        {\n            \"email\": \"alice@itec.edu\",\n            \"name\": \"Alice\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/users",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const newAccessToken = responseHeaders['x-access-token']",
									"",
									"if(newAccessToken){",
									"    console.log('Set new access token')",
									"postman.setEnvironmentVariable(\"accessToken\", newAccessToken);",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									" //in 14 day // 14d = 12096e5ms",
									"postman.setEnvironmentVariable(\"timeout\", JSON.stringify(new Date(Date.now() + 12096e5)));",
									"",
									"",
									"",
									"postman.setEnvironmentVariable(\"timeOfAddition\", JSON.stringify(Date.now()));"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "x-refresh",
								"value": "{{refreshToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"announcementDataList\": [\n        {\n            \"email\": \"test@web.de\",\n            \"name\": \"Ragesh\"\n        },\n        {\n            \"email\": \"bob@itec.edu\",\n            \"name\": \"Bob\"\n        },\n        {\n            \"email\": \"alice@itec.edu\",\n            \"name\": \"Alice\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/users",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{accessToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "email",
			"value": "test@example.com"
		},
		{
			"key": "password",
			"value": "Password456!"
		},
		{
			"key": "name",
			"value": "Jane Doe"
		},
		{
			"key": "accessToken",
			"value": "<accessToken will be set when you create a session>"
		},
		{
			"key": "refreshToken",
			"value": "<refreshToken will be set when you create a session>"
		},
		{
			"key": "endpoint",
			"value": "http://localhost:1337"
		},
		{
			"key": "productId",
			"value": "<productId will be set when you create a session>"
		},
		{
			"key": "alt_password",
			"value": "thisISsoCOOL",
			"type": "string"
		},
		{
			"key": "alt_accessToken",
			"value": "<accessToken will be set when you create a session>",
			"type": "string"
		},
		{
			"key": "alt_refreshToken",
			"value": "<refreshToken will be set when you create a session>",
			"type": "string"
		},
		{
			"key": "timeout",
			"value": "\"2022-01-23T10:35:45.451Z\"",
			"type": "string"
		},
		{
			"key": "timeOfAddition",
			"value": "\"2022-01-23T10:35:45.451Z\"",
			"type": "string"
		}
	]
}