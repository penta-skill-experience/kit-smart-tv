// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Personalization page tests snapshot for render background function 1`] = `
<div>
  <ForwardRef(Grid)
    alignItems="center"
    container={true}
    direction="row"
    justifyContent="center"
    spacing={2}
  >
    <ForwardRef(Grid)
      item={true}
      xs={12}
    >
      <ForwardRef(FormControl)>
        <ForwardRef(FormLabel)>
          Choose your color scheme:
        </ForwardRef(FormLabel)>
        <ForwardRef(RadioGroup)
          onChange={[Function]}
          value="1"
        />
      </ForwardRef(FormControl)>
    </ForwardRef(Grid)>
    <ForwardRef(Grid)
      item={true}
      xs={12}
    >
      <ForwardRef(FormControl)>
        <ForwardRef(FormLabel)>
          Choose your preferred font size:
        </ForwardRef(FormLabel)>
        <ForwardRef(RadioGroup)
          onChange={[Function]}
          value=""
        />
      </ForwardRef(FormControl)>
    </ForwardRef(Grid)>
    <ForwardRef(Grid)
      item={true}
      xs={12}
    />
    <ForwardRef(Grid)
      item={true}
      xs={12}
    >
      <ForwardRef(Button)
        onClick={[Function]}
        variant="contained"
      >
        Save Changes
      </ForwardRef(Button)>
      <ForwardRef(Snackbar)
        anchorOrigin={
          Object {
            "horizontal": "right",
            "vertical": "bottom",
          }
        }
        autoHideDuration={2000}
        message="Changes Saved"
        onClose={[Function]}
        open={false}
      />
      <ForwardRef(Snackbar)
        anchorOrigin={
          Object {
            "horizontal": "right",
            "vertical": "bottom",
          }
        }
        autoHideDuration={2000}
        message="Color scheme, font size and a background must be chosen"
        onClose={[Function]}
        open={false}
      />
      <ForwardRef(Snackbar)
        anchorOrigin={
          Object {
            "horizontal": "right",
            "vertical": "bottom",
          }
        }
        autoHideDuration={2000}
        message="Session expired"
        onClose={[Function]}
        open={false}
      />
    </ForwardRef(Grid)>
  </ForwardRef(Grid)>
</div>
`;

exports[`Personalization page tests snapshot test for personalization page 1`] = `
<div>
  <ForwardRef(Grid)
    alignItems="center"
    container={true}
    direction="row"
    justifyContent="center"
    spacing={2}
  >
    <ForwardRef(Grid)
      item={true}
      xs={12}
    >
      <ForwardRef(FormControl)>
        <ForwardRef(FormLabel)>
          Choose your color scheme:
        </ForwardRef(FormLabel)>
        <ForwardRef(RadioGroup)
          onChange={[Function]}
          value=""
        >
          <ForwardRef(FormControlLabel)
            control={<ForwardRef(Radio) />}
            label="light"
            value="1"
          />
        </ForwardRef(RadioGroup)>
      </ForwardRef(FormControl)>
    </ForwardRef(Grid)>
    <ForwardRef(Grid)
      item={true}
      xs={12}
    >
      <ForwardRef(FormControl)>
        <ForwardRef(FormLabel)>
          Choose your preferred font size:
        </ForwardRef(FormLabel)>
        <ForwardRef(RadioGroup)
          onChange={[Function]}
          value=""
        >
          <ForwardRef(FormControlLabel)
            control={<ForwardRef(Radio) />}
            label="arial"
            value="1"
          />
        </ForwardRef(RadioGroup)>
      </ForwardRef(FormControl)>
    </ForwardRef(Grid)>
    <ForwardRef(Grid)
      item={true}
      xs={12}
    />
    <ForwardRef(Grid)
      item={true}
      xs={12}
    >
      <ForwardRef(Button)
        onClick={[Function]}
        variant="contained"
      >
        Save Changes
      </ForwardRef(Button)>
      <ForwardRef(Snackbar)
        anchorOrigin={
          Object {
            "horizontal": "right",
            "vertical": "bottom",
          }
        }
        autoHideDuration={2000}
        message="Changes Saved"
        onClose={[Function]}
        open={false}
      />
      <ForwardRef(Snackbar)
        anchorOrigin={
          Object {
            "horizontal": "right",
            "vertical": "bottom",
          }
        }
        autoHideDuration={2000}
        message="Color scheme, font size and a background must be chosen"
        onClose={[Function]}
        open={false}
      />
      <ForwardRef(Snackbar)
        anchorOrigin={
          Object {
            "horizontal": "right",
            "vertical": "bottom",
          }
        }
        autoHideDuration={2000}
        message="Session expired"
        onClose={[Function]}
        open={false}
      />
    </ForwardRef(Grid)>
  </ForwardRef(Grid)>
</div>
`;

exports[`background image render test snapshot for render background function 1`] = `
<div>
  <ForwardRef(Grid)
    alignItems="center"
    container={true}
    direction="row"
    justifyContent="center"
    spacing={2}
  >
    <ForwardRef(Grid)
      item={true}
      xs={12}
    >
      <ForwardRef(FormControl)>
        <ForwardRef(FormLabel)>
          Choose your color scheme:
        </ForwardRef(FormLabel)>
        <ForwardRef(RadioGroup)
          onChange={[Function]}
          value="1"
        />
      </ForwardRef(FormControl)>
    </ForwardRef(Grid)>
    <ForwardRef(Grid)
      item={true}
      xs={12}
    >
      <ForwardRef(FormControl)>
        <ForwardRef(FormLabel)>
          Choose your preferred font size:
        </ForwardRef(FormLabel)>
        <ForwardRef(RadioGroup)
          onChange={[Function]}
          value=""
        />
      </ForwardRef(FormControl)>
    </ForwardRef(Grid)>
    <ForwardRef(Grid)
      item={true}
      xs={12}
    />
    <ForwardRef(Grid)
      item={true}
      xs={12}
    >
      <ForwardRef(Button)
        onClick={[Function]}
        variant="contained"
      >
        Save Changes
      </ForwardRef(Button)>
      <ForwardRef(Snackbar)
        anchorOrigin={
          Object {
            "horizontal": "right",
            "vertical": "bottom",
          }
        }
        autoHideDuration={2000}
        message="Changes Saved"
        onClose={[Function]}
        open={false}
      />
      <ForwardRef(Snackbar)
        anchorOrigin={
          Object {
            "horizontal": "right",
            "vertical": "bottom",
          }
        }
        autoHideDuration={2000}
        message="Color scheme, font size and a background must be chosen"
        onClose={[Function]}
        open={false}
      />
      <ForwardRef(Snackbar)
        anchorOrigin={
          Object {
            "horizontal": "right",
            "vertical": "bottom",
          }
        }
        autoHideDuration={2000}
        message="Session expired"
        onClose={[Function]}
        open={false}
      />
    </ForwardRef(Grid)>
  </ForwardRef(Grid)>
</div>
`;
